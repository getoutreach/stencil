<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>A smart templating engine for service development on Stencil</title><link>https://engineering.outreach.io/stencil/</link><description>Recent content in A smart templating engine for service development on Stencil</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 02 May 2022 12:00:00 -0500</lastBuildDate><atom:link href="https://engineering.outreach.io/stencil/index.xml" rel="self" type="application/rss+xml"/><item><title>Stencil Documentation</title><link>https://engineering.outreach.io/stencil/documentation/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/documentation/</guid><description>Below you will find some of the most common and helpful pages from our documentation.</description></item><item><title>Contribute to Stencil Development</title><link>https://engineering.outreach.io/stencil/contribute/development/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/contribute/development/</guid><description>Introduction stencil is an open-source project and lives by the work of its contributors. There are plenty of open issues, and we need your help to make stencil even more awesome. You don&amp;rsquo;t need to be a Go guru to contribute to the project&amp;rsquo;s development.
Assumptions This contribution guide takes a step-by-step approach in hopes of helping newcomers. Therefore, we only assume the following:
You are new to Git or open-source projects in general You are a fan of Stencil and enthusiastic about contributing to the project If you&amp;rsquo;re struggling at any point in this contribution guide, reach out to the Stencil community in Stencil&amp;rsquo;s discussion forum</description></item><item><title>Quick Start</title><link>https://engineering.outreach.io/stencil/getting-started/quick-start/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/getting-started/quick-start/</guid><description>This quick start uses macOS in the examples. For instructions about how to install Stencil on other operating systems, see install.
It is required to have Git installed to run this tutorial.
Step 1: Install Stencil If you don&amp;rsquo;t already have stencil installed, follow the documentation to install it.
Step 2: Create a service.yaml First start by creating a new directory for your application, this should generally match whatever the name for your application is going to be.</description></item><item><title>Contribute to the Stencil Docs</title><link>https://engineering.outreach.io/stencil/contribute/documentation/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/contribute/documentation/</guid><description>Create Your Fork It&amp;rsquo;s best to make changes to the Stencil docs on your local machine to check for consistent visual styling. Make sure you&amp;rsquo;ve created a fork of stencil on GitHub and cloned the repository locally on your machine. For more information, you can see GitHub&amp;rsquo;s documentation on &amp;ldquo;forking&amp;rdquo; or follow along with Stencil&amp;rsquo;s development contribution guide.
You can then create a separate branch for your additions. Be sure to choose a descriptive branch name that best fits the type of content.</description></item><item><title>Apache License</title><link>https://engineering.outreach.io/stencil/about/license/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/about/license/</guid><description>Version 2.0, January 2004 https://www.apache.org/licenses/LICENSE-2.0
Terms and Conditions for use, reproduction, and distribution
1. Definitions “License” shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.
“Licensor” shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.
“Legal Entity” shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity.</description></item><item><title>service.yaml</title><link>https://engineering.outreach.io/stencil/reference/service.yaml/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/reference/service.yaml/</guid><description>What is a service.yaml? A service.yaml can be thought as the specification for an application based on the modules being used. It defines the modules an application uses and the arguments to pass to them.
What are the fields in a service.yaml name: The name of the application arguments: The arguments to pass to the modules. This is a map of key value pairs. modules: The modules to use.</description></item><item><title>stencil</title><link>https://engineering.outreach.io/stencil/commands/stencil/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil/</guid><description>stencil NAME: stencil - A new cli application USAGE: stencil [global options] command [command options] [arguments...] VERSION: v1.14.2 DESCRIPTION: a smart templating engine for service development COMMANDS: describe create help, h Shows a list of commands or help for one command GLOBAL OPTIONS: --dry-run, --dryrun Don&amp;#39;t write files to disk (default: false) --frozen-lockfile Use versions from the lockfile instead of the latest (default: false) --skip-update skips the updater check (default: false) --debug enables debug logging for all components (i.</description></item><item><title>stencil create</title><link>https://engineering.outreach.io/stencil/commands/stencil_create/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_create/</guid><description>stencil create NAME: stencil create - A new cli application USAGE: stencil create command [command options] [arguments...] DESCRIPTION: Commands to create template repositories, or stencil powered repositories COMMANDS: templaterepository help, h Shows a list of commands or help for one command OPTIONS: --help, -h show help (default: false)</description></item><item><title>stencil create templaterepository</title><link>https://engineering.outreach.io/stencil/commands/stencil_create_templaterepository/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_create_templaterepository/</guid><description>stencil create templaterepository NAME: stencil create templaterepository - USAGE: stencil create templaterepository [command options] create templaterepository &amp;lt;name&amp;gt; DESCRIPTION: Creates a templaterepository with the provided name in the current directory OPTIONS: --help, -h show help (default: false)</description></item><item><title>stencil describe</title><link>https://engineering.outreach.io/stencil/commands/stencil_describe/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_describe/</guid><description>stencil describe NAME: stencil describe - USAGE: stencil describe [command options] [arguments...] DESCRIPTION: Print information about a known file rendered by a template OPTIONS: --help, -h show help (default: false)</description></item><item><title>Stencil Modules</title><link>https://engineering.outreach.io/stencil/reference/modules/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/reference/modules/</guid><description>Stencil Modules are the core building blocks in Stencil.
Modules are used to create reusable grouping of templates and native extensions to be used by stencil.
Stencil Modules are powered by Go Modules and must be within a git repository. For more information about Go Modules, see:
https://github.com/golang/go/wiki/Modules https://blog.golang.org/using-go-modules Types of Modules There are two types of module usable by stencil, a module and a native extension. A module may, itself, be only one of these types of modules.</description></item><item><title>file.Block</title><link>https://engineering.outreach.io/stencil/functions/file.block/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.block/</guid><description>Block returns the contents of a given block ###Block(name) Hello, world! ###EndBlock(name)
###Block(name) {{- /* Only output if the block is set */}}{{-ifnot(empty(file.Block&amp;#34;name&amp;#34;))}}{{file.Block&amp;#34;name&amp;#34;}}{{-end}}###EndBlock(name) ###Block(name) {{-/*Shorthandsyntax,butaddsnewlineifnocontents*/}}{{file.Block&amp;#34;name&amp;#34;}}###EndBlock(name)</description></item><item><title>file.Create</title><link>https://engineering.outreach.io/stencil/functions/file.create/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.create/</guid><description>Create creates a new file that is rendered by the current template. If the template has a single file with no contents this file replaces it.
{{-define&amp;#34;command&amp;#34;}}package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;hello, world!&amp;#34;) } {{-end}}# Generate a &amp;#34;&amp;lt;commandName&amp;gt;.go&amp;#34; file for each command in .arguments.commands {{-range$_,$commandName:=(stencil.</description></item><item><title>file.Delete</title><link>https://engineering.outreach.io/stencil/functions/file.delete/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.delete/</guid><description>Delete deletes the current file</description></item><item><title>file.Path</title><link>https://engineering.outreach.io/stencil/functions/file.path/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.path/</guid><description>Path returns the current path of the file we&amp;rsquo;re writing to.</description></item><item><title>file.SetContents</title><link>https://engineering.outreach.io/stencil/functions/file.setcontents/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.setcontents/</guid><description>SetContents sets the contents of the current file to the provided string.</description></item><item><title>file.SetPath</title><link>https://engineering.outreach.io/stencil/functions/file.setpath/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.setpath/</guid><description>SetPath changes the path of the current file</description></item><item><title>file.Skip</title><link>https://engineering.outreach.io/stencil/functions/file.skip/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.skip/</guid><description>Skip skips the current file</description></item><item><title>file.Static</title><link>https://engineering.outreach.io/stencil/functions/file.static/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.static/</guid><description>Static marks the current file as static</description></item><item><title>Install Stencil</title><link>https://engineering.outreach.io/stencil/getting-started/installing/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/getting-started/installing/</guid><description>There is lots of talk about &amp;ldquo;Stencil being written in Go&amp;rdquo;, but you don&amp;rsquo;t need to install Go to enjoy Stencil. Just grab a precompiled binary!
Stencil is written in Go with support for multiple platforms. The latest release can be found at Stencil Releases.
Stencil currently provides pre-built binaries for the following:
macOS (Darwin) for x64, i386, and ARM architectures Windows Linux Stencil may also be compiled from source wherever the Go toolchain can run; e.</description></item><item><title>Module Quick Start</title><link>https://engineering.outreach.io/stencil/getting-started/module-quick-start/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/getting-started/module-quick-start/</guid><description>This quick start assumes you&amp;rsquo;re familiar with stencil usage already. If you aren&amp;rsquo;t be sure to go through the reference documentation or the quick start.
Step 1: Create a module Using the stencil create command we&amp;rsquo;re able to quickly create a module, let&amp;rsquo;s start with a simple hello world module.
create-module.sh mkdir helloworld; cd helloworld stencil create module github.com/yourorg/helloworld You&amp;rsquo;ll notice that when running that command, stencil itself was ran.</description></item><item><title>Native Extension Quick Start</title><link>https://engineering.outreach.io/stencil/getting-started/native-extension-quick-start/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/getting-started/native-extension-quick-start/</guid><description>This quick start assumes you&amp;rsquo;re familiar with stencil and module usage already. If you aren&amp;rsquo;t be sure to go through the reference documentation or the other quick starts here before proceeding. You&amp;rsquo;ve been warned!
What is a Native Extension? Native extensions are special module types that don&amp;rsquo;t use go-templates to integrate with stencil. Instead they expose template functions written in another language that can be called by stencil templates.</description></item><item><title>Native Extensions</title><link>https://engineering.outreach.io/stencil/reference/native-extensions/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/reference/native-extensions/</guid><description>A native extension follows the base rules of a template module, but it may not contain any templates. This means a template module CANNOT contain a native extension.
The major difference between a module and a native extension is that instead of a templates/ directory a plugin/ directory is used to store the source code of the plugin.
Creating a Native Extension For details on how to create a native extension, check out the getting started documentation.</description></item><item><title>stencil.AddToModuleHook</title><link>https://engineering.outreach.io/stencil/functions/stencil.addtomodulehook/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.addtomodulehook/</guid><description>AddToModuleHook adds to a hook in another module</description></item><item><title>stencil.ApplyTemplate</title><link>https://engineering.outreach.io/stencil/functions/stencil.applytemplate/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.applytemplate/</guid><description>ApplyTemplate executes a template inside of the current module that belongs to the actively rendered template. It does not support rendering a template from another module.
{{-define&amp;#34;command&amp;#34;}}package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;hello, world!&amp;#34;) } {{-end}}{{-stencil.</description></item><item><title>stencil.Arg</title><link>https://engineering.outreach.io/stencil/functions/stencil.arg/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.arg/</guid><description>Arg returns the value of an argument in the service&amp;rsquo;s manifest.</description></item><item><title>stencil.Args</title><link>https://engineering.outreach.io/stencil/functions/stencil.args/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.args/</guid><description>Args returns all arguments passed to stencil from the service&amp;rsquo;s manifest. Note: This doesn&amp;rsquo;t set default values and is instead representative of _all_ data passed in its raw form.</description></item><item><title>stencil.GetModuleHook</title><link>https://engineering.outreach.io/stencil/functions/stencil.getmodulehook/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.getmodulehook/</guid><description>GetModuleHook returns a module block in the scope of this module</description></item><item><title>Template Module</title><link>https://engineering.outreach.io/stencil/reference/template-module/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/reference/template-module/</guid><description>A template module, sometimes referred to as a &amp;ldquo;template repository&amp;rdquo; is a module consumable by a stencil application, that contains a collection of go-templates.
General Module Requirements A module requires a name and a description currently that are set in the manifest.yaml described later on in this document.
The name of a module must be equal to the import path of the module. The import path of a module follows the same rules as Golang, where as the repository URL must equal the import path.</description></item><item><title>What is Stencil?</title><link>https://engineering.outreach.io/stencil/about/what-is-stencil/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/about/what-is-stencil/</guid><description>Stencil is a tool to eliminate run-once boilerplate code generally created by tools like create-react-app and eliminate the decade old practice of copying and pasting boilerplate from stackoverflow and other websites.
Instead you can write modules for your boilerplate and other &amp;ldquo;components&amp;rdquo; of an application, library, or etc and use them in your application/library/whatever else you dare to create.
Stencil enables this through a few different components:
Modules - The major selling point of stencil, allows you to create module groups of Go templates and other dependencies.</description></item></channel></rss>