<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>A smart templating engine for service development on Stencil</title><link>https://engineering.outreach.io/stencil/</link><description>Recent content in A smart templating engine for service development on Stencil</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 02 May 2022 12:00:00 -0500</lastBuildDate><atom:link href="https://engineering.outreach.io/stencil/index.xml" rel="self" type="application/rss+xml"/><item><title>Stencil Documentation</title><link>https://engineering.outreach.io/stencil/documentation/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/documentation/</guid><description>Below you will find some of the most common and helpful pages from our documentation.</description></item><item><title>Contribute to Stencil Development</title><link>https://engineering.outreach.io/stencil/contribute/development/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/contribute/development/</guid><description>Introduction stencil is an open-source project and lives by the work of its contributors. There are plenty of open issues, and we need your help to make stencil even more awesome. You don&amp;rsquo;t need to be a Go guru to contribute to the project&amp;rsquo;s development.
Assumptions This contribution guide takes a step-by-step approach in hopes of helping newcomers. Therefore, we only assume the following:
You are new to Git or open-source projects in general You are a fan of Stencil and enthusiastic about contributing to the project If you&amp;rsquo;re struggling at any point in this contribution guide, reach out to the Stencil community in Stencil&amp;rsquo;s discussion forum</description></item><item><title>Quick Start</title><link>https://engineering.outreach.io/stencil/getting-started/quick-start/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/getting-started/quick-start/</guid><description>This quick start uses macOS in the examples. For instructions about how to install Stencil on other operating systems, see install.
It is required to have Git installed to run this tutorial.
Step 1: Install Stencil If you don&amp;rsquo;t already have stencil installed, follow the documentation to install it.
Step 2: Create a service.yaml First start by creating a new directory for your application, this should generally match whatever the name for your application is going to be.</description></item><item><title>Contribute to the Stencil Docs</title><link>https://engineering.outreach.io/stencil/contribute/documentation/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/contribute/documentation/</guid><description>Create Your Fork It&amp;rsquo;s best to make changes to the Stencil docs on your local machine to check for consistent visual styling. Make sure you&amp;rsquo;ve created a fork of stencil on GitHub and cloned the repository locally on your machine. For more information, you can see GitHub&amp;rsquo;s documentation on &amp;ldquo;forking&amp;rdquo; or follow along with Stencil&amp;rsquo;s development contribution guide.
You can then create a separate branch for your additions. Be sure to choose a descriptive branch name that best fits the type of content.</description></item><item><title>Apache License</title><link>https://engineering.outreach.io/stencil/about/license/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/about/license/</guid><description>Version 2.0, January 2004 https://www.apache.org/licenses/LICENSE-2.0
Terms and Conditions for use, reproduction, and distribution
1. Definitions “License” shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.
“Licensor” shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.
“Legal Entity” shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity.</description></item><item><title>file.Block</title><link>https://engineering.outreach.io/stencil/functions/file.block/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.block/</guid><description>###Block(name) Hello, world! ###EndBlock(name) ###Block(name) {{- /* Only output if the block is set */}} {{- if not (empty (file.Block &amp;#34;name&amp;#34;)) }} {{ file.Block &amp;#34;name&amp;#34; }} {{- end }} ###EndBlock(name) ###Block(name) {{ - /* Short hand syntax, but adds newline if no contents */}} {{ file.Block &amp;#34;name&amp;#34; }} ###EndBlock(name)</description></item><item><title>file.Create</title><link>https://engineering.outreach.io/stencil/functions/file.create/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.create/</guid><description>If the template has a single file with no contents this file replaces it.
{{- define &amp;#34;command&amp;#34; }} package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;hello, world!&amp;#34;) } {{- end }} # Generate a &amp;#34;&amp;lt;commandName&amp;gt;.go&amp;#34; file for each command in .arguments.commands {{- range $_, $commandName := (stencil.Arg &amp;#34;commands&amp;#34;) }} {{- file.Create (printf &amp;#34;cmd/%s.go&amp;#34; $commandName) 0600 now }} {{- stencil.ApplyTemplate &amp;#34;command&amp;#34; | file.SetContents }} {{- end }}</description></item><item><title>file.Delete</title><link>https://engineering.outreach.io/stencil/functions/file.delete/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.delete/</guid><description>{{ file.Delete }}</description></item><item><title>file.Path</title><link>https://engineering.outreach.io/stencil/functions/file.path/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.path/</guid><description>{{ file.Path }}</description></item><item><title>file.RemoveAll</title><link>https://engineering.outreach.io/stencil/functions/file.removeall/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.removeall/</guid><description>{{ file.RemoveAll &amp;#34;path&amp;#34; }}</description></item><item><title>file.SetContents</title><link>https://engineering.outreach.io/stencil/functions/file.setcontents/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.setcontents/</guid><description>This is useful for programmatic file generation within a template.
{{ file.SetContents &amp;#34;Hello, world!&amp;#34; }}</description></item><item><title>file.SetPath</title><link>https://engineering.outreach.io/stencil/functions/file.setpath/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.setpath/</guid><description>{{ $_ := file.SetPath &amp;#34;new/path/to/file.txt&amp;#34; }} Note: The $_ is required to ensure &amp;lt;nil&amp;gt; isn&amp;rsquo;t outputted into the template.</description></item><item><title>file.Skip</title><link>https://engineering.outreach.io/stencil/functions/file.skip/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.skip/</guid><description>{{ $_ := file.Skip &amp;#34;A reason to skip this reason&amp;#34; }}</description></item><item><title>file.Static</title><link>https://engineering.outreach.io/stencil/functions/file.static/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/file.static/</guid><description>Marking a file is equivalent to calling file.Skip, but instead file.Skip is only called if the file already exists. This is useful for files you want to generate but only once. It&amp;rsquo;s generally recommended that you do not do this as it limits your ability to change the file in the future.
{{ $_ := file.Static }}</description></item><item><title>stencil.AddToModuleHook</title><link>https://engineering.outreach.io/stencil/functions/stencil.addtomodulehook/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.addtomodulehook/</guid><description>This functions write to module hook owned by another module for it to operate on. These are not strongly typed so it&amp;rsquo;s best practice to look at how the owning module uses it for now. Module hooks must always be written to with a list to ensure that they can always be written to multiple times.
{{- /* This writes to a module hook */}} {{ stencil.AddToModuleHook &amp;#34;github.com/myorg/repo&amp;#34; &amp;#34;myModuleHook&amp;#34; (list &amp;#34;myData&amp;#34;) }}</description></item><item><title>stencil.ApplyTemplate</title><link>https://engineering.outreach.io/stencil/functions/stencil.applytemplate/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.applytemplate/</guid><description>This function does not support rendering a template from another module.
{{- define &amp;#34;command&amp;#34;}} package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;hello, world!&amp;#34;) } {{- end }} {{- stencil.ApplyTemplate &amp;#34;command&amp;#34; | file.SetContents }}</description></item><item><title>stencil.Arg</title><link>https://engineering.outreach.io/stencil/functions/stencil.arg/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.arg/</guid><description>{{- stencil.Arg &amp;#34;name&amp;#34; }} Note: Using `stencil.Arg` with no path returns all arguments and is equivalent to `stencil.Args`. However, that is DEPRECATED along with `stencil.Args` as it doesn&amp;rsquo;t provide default types, or check the JSON schema, or track which module calls what argument.</description></item><item><title>stencil.Args</title><link>https://engineering.outreach.io/stencil/functions/stencil.args/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.args/</guid><description>Deprecated: Use Arg instead. Args returns all arguments passed to stencil from the service&amp;rsquo;s manifest
Note: This doesn&amp;rsquo;t set default values and is instead representative of _all_ data passed in its raw form.
This is deprecated and will be removed in a future release.
{{- (stencil.Args).name }}</description></item><item><title>stencil.Debug</title><link>https://engineering.outreach.io/stencil/functions/stencil.debug/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.debug/</guid><description>Debug logs the provided arguments under the DEBUG log level (must run stencil with --debug).
{{- $_ := stencil.Debug &amp;#34;I&amp;#39;m a log!&amp;#34; }}</description></item><item><title>stencil.Exists</title><link>https://engineering.outreach.io/stencil/functions/stencil.exists/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.exists/</guid><description>{{- if stencil.Exists &amp;#34;myfile.txt&amp;#34; }} {{ stencil.ReadFile &amp;#34;myfile.txt&amp;#34; }} {{- end }}</description></item><item><title>stencil.GetGlobal</title><link>https://engineering.outreach.io/stencil/functions/stencil.getglobal/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.getglobal/</guid><description>GetGlobal retrieves a global variable set by SetGlobal. The data returned from this function is unstructured so by averse to panics - look at where it was set to ensure you&amp;rsquo;re dealing with the proper type of data that you think it is.
{{- /* This retrieves a global from the current context of the template module repository */}} {{ $isGeorgeCool := stencil.GetGlobal &amp;#34;IsGeorgeCool&amp;#34; }}</description></item><item><title>stencil.GetModuleHook</title><link>https://engineering.outreach.io/stencil/functions/stencil.getmodulehook/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.getmodulehook/</guid><description>This is incredibly useful for allowing other modules to write to files that your module owns. Think of them as extension points for your module. The value returned by this function is always a []any, aka a list.
{{- /* This returns a []any */}} {{ $hook := stencil.GetModuleHook &amp;#34;myModuleHook&amp;#34; }} {{- range $hook }} {{ . }} {{- end }}</description></item><item><title>stencil.ReadBlocks</title><link>https://engineering.outreach.io/stencil/functions/stencil.readblocks/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.readblocks/</guid><description>ReadBlocks parses a file and attempts to read the blocks from it, and their data.
As a special case, if the file does not exist, an empty map is returned instead of an error.
**NOTE**: This function does not guarantee that blocks are able to be read during runtime. for example, if you try to read the blocks of a file from another module there is no guarantee that that file will exist before you run this function.</description></item><item><title>stencil.ReadFile</title><link>https://engineering.outreach.io/stencil/functions/stencil.readfile/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.readfile/</guid><description>{{ stencil.ReadFile &amp;#34;myfile.txt&amp;#34; }}</description></item><item><title>stencil.SetGlobal</title><link>https://engineering.outreach.io/stencil/functions/stencil.setglobal/</link><pubDate>Wed, 18 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/functions/stencil.setglobal/</guid><description>SetGlobal sets a global to be used in the context of the current template module repository. This is useful because sometimes you want to define variables inside of a helpers template file after doing manifest argument processing and then use them within one or more template files to be rendered; however, go templates limit the scope of symbols to the current template they are defined in, so this is not possible without external tooling like this function.</description></item><item><title>service.yaml</title><link>https://engineering.outreach.io/stencil/reference/service.yaml/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/reference/service.yaml/</guid><description>What is a service.yaml? A service.yaml can be thought as the specification for an application based on the modules being used. It defines the modules an application uses and the arguments to pass to them.
What are the fields in a service.yaml name: The name of the application arguments: The arguments to pass to the modules. This is a map of key value pairs. modules: The modules to use. This is a list of objects containing a name and a, optionally, version field to use of this module.</description></item><item><title>stencil</title><link>https://engineering.outreach.io/stencil/commands/stencil/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil/</guid><description>stencil NAME: stencil - A new cli application USAGE: stencil [global options] command [command options] VERSION: v1.43.0 DESCRIPTION: a smart templating engine for service development COMMANDS: describe create docs module updater Commands for interacting with the built-in updater help, h Shows a list of commands or help for one command GLOBAL OPTIONS: --concurrent-resolvers value, -c value Number of concurrent resolvers to use when resolving modules (default: 5) --dry-run, --dryrun Don&amp;#39;t write files to disk (default: false) --frozen-lockfile Use versions from the lockfile instead of the latest (default: false) --use-prerelease Use prerelease versions of stencil modules (default: false) --allow-major-version-upgrades Allow major version upgrades without confirmation (default: false) --debug, -d Enables debug logging for version resolution, template render, and other useful information (default: false) --skip-update Skips the updater check (default: false) --force-update-check Force checking for an update (default: false) --help, -h show help --version, -v print the version</description></item><item><title>stencil create</title><link>https://engineering.outreach.io/stencil/commands/stencil_create/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_create/</guid><description>stencil create NAME: stencil create USAGE: stencil create [command options] DESCRIPTION: Commands to create template repositories, or stencil powered repositories COMMANDS: module, templaterepository help, h Shows a list of commands or help for one command OPTIONS: --help, -h show help</description></item><item><title>stencil create module</title><link>https://engineering.outreach.io/stencil/commands/stencil_create_module/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_create_module/</guid><description>stencil create module NAME: stencil create module USAGE: stencil create module [command options] create module &amp;lt;name&amp;gt; DESCRIPTION: Creates a module with the provided name in the current directory OPTIONS: --native-extension Generates a native extension (default: false) --help, -h show help</description></item><item><title>stencil describe</title><link>https://engineering.outreach.io/stencil/commands/stencil_describe/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_describe/</guid><description>stencil describe NAME: stencil describe USAGE: stencil describe [command options] DESCRIPTION: Print information about a known file rendered by a template OPTIONS: --help, -h show help</description></item><item><title>stencil docs</title><link>https://engineering.outreach.io/stencil/commands/stencil_docs/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_docs/</guid><description>stencil docs NAME: stencil docs USAGE: stencil docs [command options] DESCRIPTION: Commands for generating documentation COMMANDS: generate Generate documentation help, h Shows a list of commands or help for one command OPTIONS: --help, -h show help</description></item><item><title>stencil docs generate</title><link>https://engineering.outreach.io/stencil/commands/stencil_docs_generate/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_docs_generate/</guid><description>stencil docs generate NAME: stencil docs generate - Generate documentation USAGE: stencil docs generate [command options] DESCRIPTION: Generates documentation for the current stencil module OPTIONS: --help, -h show help</description></item><item><title>stencil module</title><link>https://engineering.outreach.io/stencil/commands/stencil_module/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_module/</guid><description>stencil module NAME: stencil module USAGE: stencil module [command options] DESCRIPTION: Commands to configure template repositories for native-extension functionality, or stencil powered repositories COMMANDS: configure help, h Shows a list of commands or help for one command OPTIONS: --help, -h show help</description></item><item><title>stencil module configure</title><link>https://engineering.outreach.io/stencil/commands/stencil_module_configure/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_module_configure/</guid><description>stencil module configure NAME: stencil module configure USAGE: stencil module configure [command options] configure module DESCRIPTION: updates a module with the provided name in the current directory OPTIONS: --remove-native-extension Removes native extension configuration for the provided module (default: false) --help, -h show help</description></item><item><title>Stencil Modules</title><link>https://engineering.outreach.io/stencil/reference/modules/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/reference/modules/</guid><description>Stencil Modules are the core building blocks in Stencil.
Modules are used to create reusable grouping of templates and native extensions to be used by stencil.
Stencil Modules are powered by Go Modules and must be within a git repository. For more information about Go Modules, see:
https://github.com/golang/go/wiki/Modules https://blog.golang.org/using-go-modules Types of Modules There are two types of module usable by stencil, a module and a native extension. A module may, itself, be only one of these types of modules.</description></item><item><title>stencil updater</title><link>https://engineering.outreach.io/stencil/commands/stencil_updater/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_updater/</guid><description>stencil updater NAME: stencil updater - Commands for interacting with the built-in updater USAGE: stencil updater [command options] COMMANDS: set-channel Set the channel to check for updates get-channels Returns the valid channels rollback Rollback to the previous version use Use a specific version of the application status Returns the current status of the updater help, h Shows a list of commands or help for one command OPTIONS: --help, -h show help</description></item><item><title>stencil updater get-channel</title><link>https://engineering.outreach.io/stencil/commands/stencil_updater_get-channel/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_updater_get-channel/</guid><description>stencil updater get-channel NAME: stencil updater get-channel - Returns the current channel: release or rc USAGE: stencil updater get-channel [command options] [arguments...] OPTIONS: --help, -h show help (default: false)</description></item><item><title>stencil updater get-channels</title><link>https://engineering.outreach.io/stencil/commands/stencil_updater_get-channels/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_updater_get-channels/</guid><description>stencil updater get-channels NAME: stencil updater get-channels - Returns the valid channels USAGE: stencil updater get-channels [command options] OPTIONS: --help, -h show help</description></item><item><title>stencil updater list-releases</title><link>https://engineering.outreach.io/stencil/commands/stencil_updater_list-releases/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_updater_list-releases/</guid><description>stencil updater list-releases NAME: stencil updater list-releases - List all releases USAGE: stencil updater list-releases [command options] [arguments...] OPTIONS: --limit value, -L value The number of releases to list (default: 50) --help, -h show help (default: false)</description></item><item><title>stencil updater rollback</title><link>https://engineering.outreach.io/stencil/commands/stencil_updater_rollback/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_updater_rollback/</guid><description>stencil updater rollback NAME: stencil updater rollback - Rollback to the previous version USAGE: stencil updater rollback [command options] OPTIONS: --help, -h show help</description></item><item><title>stencil updater set-channel</title><link>https://engineering.outreach.io/stencil/commands/stencil_updater_set-channel/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_updater_set-channel/</guid><description>stencil updater set-channel NAME: stencil updater set-channel - Set the channel to check for updates USAGE: stencil updater set-channel [command options] OPTIONS: --help, -h show help</description></item><item><title>stencil updater status</title><link>https://engineering.outreach.io/stencil/commands/stencil_updater_status/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_updater_status/</guid><description>stencil updater status NAME: stencil updater status - Returns the current status of the updater USAGE: stencil updater status [command options] OPTIONS: --help, -h show help</description></item><item><title>stencil updater use</title><link>https://engineering.outreach.io/stencil/commands/stencil_updater_use/</link><pubDate>Wed, 04 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/commands/stencil_updater_use/</guid><description>stencil updater use NAME: stencil updater use - Use a specific version of the application USAGE: stencil updater use [command options] OPTIONS: --help, -h show help</description></item><item><title>Install Stencil</title><link>https://engineering.outreach.io/stencil/getting-started/installing/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/getting-started/installing/</guid><description>There is lots of talk about &amp;ldquo;Stencil being written in Go&amp;rdquo;, but you don&amp;rsquo;t need to install Go to enjoy Stencil. Just grab a precompiled binary!
Stencil is written in Go with support for multiple platforms. The latest release can be found at Stencil Releases.
Stencil currently provides pre-built binaries for the following:
macOS (Darwin) for x64, i386, and ARM architectures Windows Linux Stencil may also be compiled from source wherever the Go toolchain can run; e.</description></item><item><title>Module Quick Start</title><link>https://engineering.outreach.io/stencil/getting-started/module-quick-start/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/getting-started/module-quick-start/</guid><description>This quick start assumes you&amp;rsquo;re familiar with stencil usage already. If you aren&amp;rsquo;t be sure to go through the reference documentation or the quick start.
Step 1: Create a module Using the stencil create command we&amp;rsquo;re able to quickly create a module, let&amp;rsquo;s start with a simple hello world module.
create-module.sh mkdir helloworld; cd helloworld stencil create module github.com/yourorg/helloworld You&amp;rsquo;ll notice that when running that command, stencil itself was ran.</description></item><item><title>Native Extension Quick Start</title><link>https://engineering.outreach.io/stencil/getting-started/native-extension-quick-start/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/getting-started/native-extension-quick-start/</guid><description>This quick start assumes you&amp;rsquo;re familiar with stencil and module usage already. If you aren&amp;rsquo;t be sure to go through the reference documentation or the other quick starts here before proceeding. You&amp;rsquo;ve been warned!
What is a Native Extension? Native extensions are special module types that don&amp;rsquo;t use go-templates to integrate with stencil. Instead they expose template functions written in another language that can be called by stencil templates.</description></item><item><title>Native Extensions</title><link>https://engineering.outreach.io/stencil/reference/native-extensions/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/reference/native-extensions/</guid><description>A native extension follows the base rules of a template module, but it may not contain any templates. This means a template module CANNOT contain a native extension.
The major difference between a module and a native extension is that instead of a templates/ directory a plugin/ directory is used to store the source code of the plugin.
Creating a Native Extension For details on how to create a native extension, check out the getting started documentation.</description></item><item><title>Template Module</title><link>https://engineering.outreach.io/stencil/reference/template-module/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/reference/template-module/</guid><description>A template module, sometimes referred to as a &amp;ldquo;template repository&amp;rdquo; is a module consumable by a stencil application, that contains a collection of go-templates.
General Module Requirements A module requires a name and a description currently that are set in the manifest.yaml described later on in this document.
The name of a module must be equal to the import path of the module. The import path of a module follows the same rules as Golang, where as the repository URL must equal the import path.</description></item><item><title>What is Stencil?</title><link>https://engineering.outreach.io/stencil/about/what-is-stencil/</link><pubDate>Mon, 02 May 2022 00:00:00 -0700</pubDate><guid>https://engineering.outreach.io/stencil/about/what-is-stencil/</guid><description>Stencil is a tool to eliminate run-once boilerplate code generally created by tools like create-react-app and eliminate the decade old practice of copying and pasting boilerplate from stackoverflow and other websites.
Instead you can write modules for your boilerplate and other &amp;ldquo;components&amp;rdquo; of an application, library, or etc and use them in your application/library/whatever else you dare to create.
Stencil enables this through a few different components:
Modules - The major selling point of stencil, allows you to create module groups of Go templates and other dependencies.</description></item></channel></rss>