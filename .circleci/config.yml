# Please re-run stencil after any changes to this file as invalid
# syntax, such as anchors, will be fixed automatically.
version: 2.1
orbs:
  shared: getoutreach/shared@2.33.0
  queue: eddiewebb/queue@2.2.1
  ## <<Stencil::Block(CircleCIExtraOrbs)>>

  ## <</Stencil::Block>>

parameters:
  rebuild_cache:
    type: boolean
    default: false
  release_rc:
    type: boolean
    default: false
  ## <<Stencil::Block(CircleCIExtraParams)>>

  ## <</Stencil::Block>>

# Extra contexts to expose to all jobs below
contexts: &contexts
  - aws-credentials
  - ghaccesstoken
  - docker-registry
  - npm-credentials
  - box
  - vault-dev
  - confluence
  - circleci-credentials
  - tray-webhooks
  - wizcli
  ## <<Stencil::Block(extraContexts)>>

  ## <</Stencil::Block>>

# Test configs to pass to test and cache jobs
test: &test
  context: *contexts
  app_name: stencil
  ### Start parameters inserted by other modules
  ### End parameters inserted by other modules
  ## <<Stencil::Block(circleTestExtra)>>
  docker_tag: latest
  ## <</Stencil::Block>>

# Branches used for releasing code, pre-release or not
release_branches: &release_branches # Release branch
  - "release"
  # Pre-releases branch
  - "main"

## <<Stencil::Block(circleAnchorExtra)>>

## <</Stencil::Block>>

jobs:
  ## <<Stencil::Block(circleJobs)>>
  integration:
    executor:
      name: shared/testbed-docker-aws
      docker_tag: stable
    resource_class: medium+
    steps:
      - shared/setup_environment
      - run:
          name: Run integration tests
          no_output_timeout: 30m
          command: echo "Implement me!"
  ## <</Stencil::Block>>

  ### Start jobs inserted by other modules
  ### End jobs inserted by other modules

workflows:
  ## <<Stencil::Block(circleWorkflows)>>

  ## <</Stencil::Block>>

  ### Start workflows inserted by other modules
  ### End workflows inserted by other modules

  rebuild-cache:
    triggers:
      - schedule:
          # Every day at 00:00 UTC.
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - shared/save_cache: *test

  manual-rebuild-cache:
    when: << pipeline.parameters.rebuild_cache >>
    jobs:
      - shared/save_cache: *test

  auto-release-rc:
    triggers:
      - schedule:
          cron: 0 19 * * 2
          filters:
            branches:
              only:
                - main
    jobs:
      - shared/trigger_rc_release:
          context: *contexts
          ## <<Stencil::Block(circleAutoTriggerRCExtra)>>
          docker_tag: latest
          ## <</Stencil::Block>>

  manual-release-rc:
    when: << pipeline.parameters.release_rc>>
    jobs:
      - shared/trigger_rc_release:
          context: *contexts
          ## <<Stencil::Block(circleManualTriggerRCExtra)>>
          docker_tag: latest
          ## <</Stencil::Block>>

  release:
    when:
      and:
        - not: << pipeline.parameters.rebuild_cache >>
        - not: << pipeline.parameters.release_rc >>
    jobs:
      ## <<Stencil::Block(circleWorkflowJobs)>>
      - integration:
          context:
            - aws-credentials
            - docker-registry
            - ghaccesstoken
            - npm-credentials
      ## <</Stencil::Block>>
      ### Start jobs inserted by other modules
      ### End jobs inserted by other modules
      - shared/release: &release
          dryrun: false
          context: *contexts
          ## <<Stencil::Block(circleReleaseExtra)>>
          docker_tag: latest
          ## <</Stencil::Block>>
          requires:
            ## <<Stencil::Block(circleReleaseRequires)>>
            - integration

            ## <</Stencil::Block>>
            - shared/test
          filters:
            branches:
              only: release
      - shared/pre-release: &pre-release
          dryrun: false
          context: *contexts
          ## <<Stencil::Block(circlePreReleaseExtra)>>
          docker_tag: latest
          ## <</Stencil::Block>>
          requires:
            ## <<Stencil::Block(circlePreReleaseRequires)>>

            ## <</Stencil::Block>>
            - shared/test
          filters:
            branches:
              only:
                - main
      # Dryrun for PRs
      - shared/pre-release: &pre-release
          dryrun: true
          context: *contexts
          executor_name: oss-docker
          docker_image: ghcr.io/getoutreach/bootstrap/ci-oss
          ## <<Stencil::Block(circlePreReleaseDryRunExtra)>>
          docker_tag: latest
          ## <</Stencil::Block>>
          requires:
            ## <<Stencil::Block(circlePreReleaseDryRunRequires)>>

            ## <</Stencil::Block>>
            - shared/test
          filters:
            branches:
              ignore: *release_branches
      - shared/test:
          <<: *test
          executor_name: oss-docker
          docker_image: ghcr.io/getoutreach/bootstrap/ci-oss
          ## <<Stencil::Block(circleSharedTestExtra)>>
          pre_setup_script: ./scripts/test-pre-setup.sh
          ## <</Stencil::Block>>
      - shared/publish_docs:
          context: *contexts
          filters:
            branches:
              only:
                - main
            tags:
              only: /v\d+(\.\d+)*(-.*)*/
